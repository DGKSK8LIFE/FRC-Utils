#!/bin/sh
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

against=HEAD

exec 1>&2 # Redirect output to stderr.

echo "Checking for bad filenames.."
illegal_files=$(
    # --cached makes sure that we only check files that are staged,
    #   otherwise all tracked files that have changed will cause this
    #   to fail, even if it is not currently staged
    git diff --cached --name-only $against |
    sed -E '/[-_\0\n\r\t\~ ]/!d'
)

if [[ $(echo $illegal_files | wc -l) != 1 ]]; then
    echo "Error: Filename contains invalid characters"
    echo "File names cannot include the following: - or _ or \0 or \n or \r or \t or ~"
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
echo "Removing spaces at ends of lines"
exec find . -type f -print0 | xargs -0 perl -pi -e 's/ +$//'
